{"version":3,"sources":["Moviedetail.js","Navbar.js","App.js","reportWebVitals.js","index.js"],"names":["Moviedetail","arrayofdata","className","map","curr","i","Poster","Title","Year","Type","src","alt","Navbar","useState","searchdata","setsearchdata","data","setdata","getdata","a","axios","get","response","console","log","Search","alert","Fragment","onSubmit","e","preventDefault","type","placeholder","value","onChange","target","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mSA+CeA,MA5Cf,YAAuC,IAAhBC,EAAe,EAAfA,YACnB,OAGI,qBAAKC,UAAU,aAAf,SACI,qBAAKA,UAAU,MAAf,SAGQD,EAAYE,KAAI,SAACC,EAAKC,GAClB,IAAQC,EAA8BF,EAA9BE,OAAQC,EAAsBH,EAAtBG,MAAOC,EAAeJ,EAAfI,KAAMC,EAASL,EAATK,KAC7B,OACI,sBAAaP,UAAU,wBAAvB,UACI,qBAAKQ,IAAKJ,EAAQK,IAAI,qBACtB,6BAAKJ,IACL,sBAAKL,UAAU,cAAf,UACI,uCAAUM,KACV,uCAAUC,UALRJ,W,uBCyDvBO,MAlEf,WAEI,MAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAAwBF,mBAAS,IAAjC,mBAAOG,EAAP,KAAaC,EAAb,KAKMC,EAAO,uCAAG,4BAAAC,EAAA,+EAIeC,IAAMC,IAAN,qCAAwCP,EAAxC,mBARf,aAIA,OAIFQ,EAJE,OAKRC,QAAQC,IAAIF,EAASN,KAAKS,QAC1BR,EAAQK,EAASN,KAAKS,QANd,gDAYRC,MAAM,4CAZE,yDAAH,qDA+Bb,OACI,eAAC,IAAMC,SAAP,WAEI,sBAAKzB,UAAU,MAAf,UACI,sBAAKA,UAAU,OAAf,UACI,iDACA,qBAAKQ,IAAI,6BAIb,uBAAMkB,SAvBD,SAACC,GACdX,IACAW,EAAEC,kBAqBM,UACI,uBAAOC,KAAK,OAAOC,YAAY,oBAAoB9B,UAAU,YAAY+B,MAAOnB,EAAYoB,SAnBvF,SAACL,GAClBd,EAAcc,EAAEM,OAAOF,UAoBX,uBAAOF,KAAK,SAASE,MAAM,SAAS/B,UAAU,iBAKtD,cAAC,EAAD,CAAaD,YAAae,QChDvBoB,MARf,WACE,OACC,cAAC,IAAMT,SAAP,UACA,cAAC,EAAD,OCGYU,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.768fa949.chunk.js","sourcesContent":["import React from 'react'\r\nimport \"./Moviedetail.css\"\r\n\r\nfunction Moviedetail({ arrayofdata }) {\r\n    return (\r\n\r\n\r\n        <div className=\"container \">\r\n            <div className=\"row\">\r\n\r\n                {\r\n                    arrayofdata.map((curr,i) => {\r\n                        const { Poster, Title, Year, Type } = curr;\r\n                        return (\r\n                            <div key={i} className=\"col-lg-3  picturedata\">\r\n                                <img src={Poster} alt=\"posters of films\" />\r\n                                <h4>{Title}</h4>\r\n                                <div className=\"yearandtype\">\r\n                                    <h6>Year:{Year}</h6>\r\n                                    <h6>Type:{Type}</h6>\r\n                                </div>\r\n\r\n                            </div>\r\n\r\n                        )\r\n                    })\r\n                }\r\n\r\n\r\n\r\n            </div>\r\n        </div>\r\n\r\n        // <div className=\"picturedata\">\r\n        //     <img src={showposter} alt=\"\"/>\r\n        //     <h4>{showtitle}</h4>\r\n        //     <div className=\"yearandtype\">\r\n        //         <h6>year:{showyear}</h6>\r\n        //         <h6>type:{showtype}</h6>\r\n        //     </div>\r\n\r\n        // </div>\r\n\r\n\r\n    )\r\n}\r\n\r\nexport default Moviedetail\r\n","import React, { useState } from 'react'\r\nimport Moviedetail from './Moviedetail'\r\nimport axios from \"axios\"\r\n\r\nimport \"./Navbar.css\"\r\nfunction Navbar() {\r\n\r\n    const [searchdata, setsearchdata] = useState(\"\");\r\n    const [data, setdata] = useState([]);\r\n    const API_KEY = \"d3e802cf\"\r\n\r\n\r\n\r\n    const getdata = async () => {\r\n        try {\r\n            \r\n                \r\n            const response = await axios.get(`https://www.omdbapi.com/?s=${searchdata}&apikey=${API_KEY}`)\r\n            console.log(response.data.Search)\r\n            setdata(response.data.Search);\r\n            \r\n            \r\n        }\r\n\r\n        catch (error) {\r\n            alert(\"oops!! try with different movie name....\")\r\n        }\r\n\r\n    }\r\n\r\n\r\n    const onsubmit = (e) => {\r\n        getdata();\r\n        e.preventDefault();\r\n    }\r\n\r\n    const onchangefunc = (e) => {\r\n        setsearchdata(e.target.value);\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <React.Fragment>\r\n\r\n            <div className=\"nav\">\r\n                <div className=\"icon\">\r\n                    <h1>React movie app</h1>\r\n                    <img src=\"../../img/camera2.png\" />\r\n                </div>\r\n\r\n\r\n                <form onSubmit={onsubmit}>\r\n                    <input type=\"text\" placeholder=\" enter movie name\" className=\"searchbar\" value={searchdata} onChange={onchangefunc}>\r\n                    </input>\r\n                    <input type=\"submit\" value=\"search\" className=\"search\"></input>\r\n                </form>\r\n\r\n            </div>\r\n\r\n            <Moviedetail arrayofdata={data} />\r\n\r\n\r\n        </React.Fragment>\r\n\r\n\r\n    )\r\n}\r\n\r\nexport default Navbar\r\n","\nimport React from 'react';\nimport './App.css';\nimport Navbar from './Navbar';\n\n\nfunction App() {\n  return (\n   <React.Fragment>\n   <Navbar/>\n   </React.Fragment>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}